{
   "app_list": {
      "app_launch_count": 0,
      "last_app_launch_ping": "13098931200000000",
      "last_launch_ping": "13098931200000000",
      "launch_count": 0
   },
   "browser": {
      "enabled_labs_experiments": [  ],
      "hung_plugin_detect_freq": 2000,
      "last_redirect_origin": "",
      "plugin_message_response_timeout": 25000
   },
   "data_reduction": {
      "daily_original_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4218637" ],
      "daily_original_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_original_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "4218637" ],
      "daily_received_length_https_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_long_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_short_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_unknown_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "last_update_date": "13098931200000000"
   },
   "hardware_acceleration_mode_previous": true,
   "http_original_content_length": "21741819",
   "http_received_content_length": "21741819",
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "network_time": {
      "network_time_mapping": {
         "local": 1454486970180.6,
         "network": 1454486971216.818
      }
   },
   "ntp": {
      "promo_resource_cache_update": "1454474339.038381"
   },
   "plugins": {
      "metadata": {
         "adobe-flash-player": {
            "displayurl": true,
            "group_name_matcher": "*Shockwave Flash*",
            "help_url": "https://support.google.com/chrome/?p=plugin_flash",
            "lang": "en-US",
            "mime_types": [ "application/futuresplash", "application/x-shockwave-flash" ],
            "name": "Adobe Flash Player",
            "url": "https://support.google.com/chrome/answer/6258784",
            "versions": [ {
               "reference": "https://helpx.adobe.com/security/products/flash-player/apsb15-18.html",
               "status": "requires_authorization",
               "version": "18.0.0.209"
            } ]
         },
         "adobe-reader": {
            "displayurl": true,
            "group_name_matcher": "*Adobe Acrobat*",
            "help_url": "https://support.google.com/chrome/?p=plugin_pdf",
            "lang": "en-US",
            "mime_types": [ "application/pdf", "application/vnd.adobe.x-mars", "application/vnd.adobe.xdp+xml", "application/vnd.adobe.xfd+xml", "application/vnd.adobe.xfdf", "application/vnd.fdf" ],
            "name": "Adobe Reader",
            "url": "https://get.adobe.com/reader/",
            "versions": [ {
               "reference": "https://helpx.adobe.com/security/products/reader/apsb14-28.html",
               "status": "requires_authorization",
               "version": "10.1.13"
            }, {
               "status": "out_of_date",
               "version": "11"
            }, {
               "reference": "https://helpx.adobe.com/security/products/reader/apsb14-28.html",
               "status": "requires_authorization",
               "version": "11.0.10"
            } ]
         },
         "adobe-shockwave": {
            "group_name_matcher": "*Shockwave for Director*",
            "help_url": "https://support.google.com/chrome/?p=plugin_shockwave",
            "lang": "en-US",
            "mime_types": [ "application/x-director" ],
            "name": "Adobe Shockwave Player",
            "url": "http://fpdownload.macromedia.com/get/shockwave/default/english/win95nt/latest/Shockwave_Installer_Slim.exe",
            "versions": [ {
               "reference": "https://helpx.adobe.com/security/products/shockwave/apsb14-10.html",
               "status": "requires_authorization",
               "version": "12.1.0.150"
            } ]
         },
         "apple-quicktime": {
            "group_name_matcher": "*QuickTime Plug-in*",
            "help_url": "https://support.google.com/chrome/?p=plugin_quicktime",
            "lang": "en-US",
            "mime_types": [ "application/sdp", "application/x-mpeg", "application/x-rtsp", "application/x-sdp", "audio/3ggp", "audio/3ggp2", "audio/aac", "audio/ac3", "audio/aiff", "audio/amr", "audio/basic", "audio/mid", "audio/midi", "audio/mp4", "audio/mpeg", "audio/vnd.qcelp", "audio/wav", "audio/x-aac", "audio/x-ac3", "audio/x-aiff", "audio/x-caf", "audio/x-gsm", "audio/x-m4a", "audio/x-m4b", "audio/x-m4p", "audio/x-midi", "audio/x-mpeg", "audio/x-wav", "image/jp2", "image/jpeg2000", "image/jpeg2000-image", "image/pict", "image/png", "image/x-jpeg2000-image", "image/x-macpaint", "image/x-pict", "image/x-png", "image/x-quicktime", "image/x-sgi", "image/x-targa", "video/3ggp", "video/3ggp2", "video/flc", "video/mp4", "video/mpeg", "video/quicktime", "video/sd-video", "video/x-m4v", "video/x-mpeg" ],
            "name": "QuickTime Player",
            "url": "http://appldnld.apple.com/QuickTime/041-3089.20111026.Sxpr4/QuickTimeInstaller.exe",
            "versions": [ {
               "reference": "http://support.apple.com/kb/HT203092",
               "status": "requires_authorization",
               "version": "7.7.6"
            } ]
         },
         "chromium-pdf": {
            "group_name_matcher": "*Chromium PDF Viewer*",
            "mime_types": [  ],
            "name": "Chromium PDF Viewer",
            "versions": [ {
               "comment": "Chrome PDF Viewer has no version information.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "divx-player": {
            "group_name_matcher": "*DivX Web Player*",
            "help_url": "https://support.google.com/chrome/?p=plugin_divx",
            "lang": "en-US",
            "mime_types": [ "video/divx", "video/x-matroska" ],
            "name": "DivX Web Player",
            "url": "http://download.divx.com/player/divxdotcom/DivXWebPlayerInstaller.exe",
            "versions": [ {
               "status": "requires_authorization",
               "version": "1.4.3.4"
            } ]
         },
         "facebook-video-calling": {
            "group_name_matcher": "*Facebook Video*",
            "lang": "en-US",
            "mime_types": [ "application/skypesdk-plugin" ],
            "name": "Facebook Video Calling",
            "url": "https://www.facebook.com/chat/video/videocalldownload.php",
            "versions": [ {
               "comment": "We do not track version information for the Facebook Video Calling Plugin.",
               "status": "requires_authorization",
               "version": "0"
            } ]
         },
         "google-chrome-pdf": {
            "group_name_matcher": "*Chrome PDF Viewer*",
            "mime_types": [  ],
            "name": "Chrome PDF Viewer",
            "versions": [ {
               "comment": "Chrome PDF Viewer has no version information.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "google-earth": {
            "group_name_matcher": "*Google Earth*",
            "lang": "en-US",
            "mime_types": [ "application/geplugin" ],
            "name": "Google Earth",
            "url": "http://www.google.com/earth/explore/products/plugin.html",
            "versions": [ {
               "comment": "We do not track version information for the Google Earth Plugin.",
               "status": "requires_authorization",
               "version": "0"
            } ]
         },
         "google-talk": {
            "group_name_matcher": "*Google Talk*",
            "mime_types": [  ],
            "name": "Google Talk",
            "versions": [ {
               "comment": "'Google Talk Plugin' and 'Google Talk Plugin Video Accelerator' use two completely different versioning schemes, so we can't define a minimum version.",
               "status": "requires_authorization",
               "version": "0"
            } ]
         },
         "google-update": {
            "group_name_matcher": "Google Update",
            "mime-types": [  ],
            "name": "Google Update",
            "versions": [ {
               "comment": "Google Update plugin is versioned but kept automatically up-to-date",
               "status": "requires_authorization",
               "version": "0"
            } ]
         },
         "ibm-java-runtime-environment": {
            "group_name_matcher": "*IBM*Java*",
            "mime_types": [ "application/x-java-applet", "application/x-java-applet;jpi-version=1.7.0_05", "application/x-java-applet;version=1.1", "application/x-java-applet;version=1.1.1", "application/x-java-applet;version=1.1.2", "application/x-java-applet;version=1.1.3", "application/x-java-applet;version=1.2", "application/x-java-applet;version=1.2.1", "application/x-java-applet;version=1.2.2", "application/x-java-applet;version=1.3", "application/x-java-applet;version=1.3.1", "application/x-java-applet;version=1.4", "application/x-java-applet;version=1.4.1", "application/x-java-applet;version=1.4.2", "application/x-java-applet;version=1.5", "application/x-java-applet;version=1.6", "application/x-java-applet;version=1.7", "application/x-java-bean", "application/x-java-bean;jpi-version=1.7.0_05", "application/x-java-bean;version=1.1", "application/x-java-bean;version=1.1.1", "application/x-java-bean;version=1.1.2", "application/x-java-bean;version=1.1.3", "application/x-java-bean;version=1.2", "application/x-java-bean;version=1.2.1", "application/x-java-bean;version=1.2.2", "application/x-java-bean;version=1.3", "application/x-java-bean;version=1.3.1", "application/x-java-bean;version=1.4", "application/x-java-bean;version=1.4.1", "application/x-java-bean;version=1.4.2", "application/x-java-bean;version=1.5", "application/x-java-bean;version=1.6", "application/x-java-bean;version=1.7", "application/x-java-vm", "application/x-java-vm-npruntime" ],
            "name": "IBM Java",
            "versions": [  ]
         },
         "java-runtime-environment": {
            "displayurl": true,
            "group_name_matcher": "Java*",
            "help_url": "https://support.google.com/chrome/?p=plugin_java",
            "lang": "en-US",
            "mime_types": [ "application/x-java-applet", "application/x-java-applet;jpi-version=1.7.0_05", "application/x-java-applet;version=1.1", "application/x-java-applet;version=1.1.1", "application/x-java-applet;version=1.1.2", "application/x-java-applet;version=1.1.3", "application/x-java-applet;version=1.2", "application/x-java-applet;version=1.2.1", "application/x-java-applet;version=1.2.2", "application/x-java-applet;version=1.3", "application/x-java-applet;version=1.3.1", "application/x-java-applet;version=1.4", "application/x-java-applet;version=1.4.1", "application/x-java-applet;version=1.4.2", "application/x-java-applet;version=1.5", "application/x-java-applet;version=1.6", "application/x-java-applet;version=1.7", "application/x-java-bean", "application/x-java-bean;jpi-version=1.7.0_05", "application/x-java-bean;version=1.1", "application/x-java-bean;version=1.1.1", "application/x-java-bean;version=1.1.2", "application/x-java-bean;version=1.1.3", "application/x-java-bean;version=1.2", "application/x-java-bean;version=1.2.1", "application/x-java-bean;version=1.2.2", "application/x-java-bean;version=1.3", "application/x-java-bean;version=1.3.1", "application/x-java-bean;version=1.4", "application/x-java-bean;version=1.4.1", "application/x-java-bean;version=1.4.2", "application/x-java-bean;version=1.5", "application/x-java-bean;version=1.6", "application/x-java-bean;version=1.7", "application/x-java-vm", "application/x-java-vm-npruntime" ],
            "name": "Java(TM)",
            "url": "http://java.com/download",
            "versions": [ {
               "comment": "Java SE 7u45",
               "status": "requires_authorization",
               "version": "10.45"
            } ]
         },
         "microsoft-office": {
            "group_name_matcher": "*Microsoft Office*",
            "mime_types": [  ],
            "name": "Microsoft Office",
            "versions": [ {
               "comment": "Microsoft Office has no version information.",
               "status": "requires_authorization",
               "version": "0"
            } ]
         },
         "nvidia-3d": {
            "group_name_matcher": "*NVIDIA 3D*",
            "mime_types": [  ],
            "name": "NVIDIA 3D",
            "versions": [ {
               "comment": "NVidia 3D has no version information.",
               "status": "requires_authorization",
               "version": "0"
            } ]
         },
         "realplayer": {
            "group_name_matcher": "*RealPlayer*",
            "help_url": "https://support.google.com/chrome/?p=plugin_real",
            "lang": "en-US",
            "mime_types": [ "audio/vnd.rn-realaudio", "video/vnd.rn-realvideo", "audio/x-pn-realaudio-plugin", "audio/x-pn-realaudio" ],
            "name": "RealPlayer",
            "url": "http://forms.real.com/real/realone/download.html?type=rpsp_us",
            "versions": [ {
               "reference": "http://service.real.com/realplayer/security/02062012_player/en/",
               "status": "requires_authorization",
               "version": "15.0.2.71"
            } ]
         },
         "silverlight": {
            "group_name_matcher": "*Silverlight*",
            "lang": "en-US",
            "mime_types": [ "application/x-silverlight", "application/x-silverlight-2" ],
            "name": "Silverlight",
            "url": "http://go.microsoft.com/fwlink/?LinkID=149156",
            "versions": [ {
               "reference": "https://support.microsoft.com/kb/3056819",
               "status": "requires_authorization",
               "version": "5.1.40416.0"
            } ]
         },
         "windows-media-player": {
            "displayurl": true,
            "group_name_matcher": "*Windows Media Player*",
            "help_url": "https://support.google.com/chrome/?p=plugin_wmp",
            "lang": "en-US",
            "mime_types": [  ],
            "name": "Windows Media Player",
            "url": "http://www.interoperabilitybridges.com/wmp-extension-for-chrome"
         },
         "x-version": 21
      },
      "resource_cache_update": "1454474394.040837"
   },
   "policy": {
      "last_statistics_update": "13098947934184569"
   },
   "profile": {
      "info_cache": {
         "Default": {
            "active_time": 1454486969.905531,
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_0",
            "background_apps": false,
            "is_ephemeral": false,
            "is_omitted_from_profile_list": false,
            "is_using_default_avatar": true,
            "is_using_default_name": false,
            "managed_user_id": "",
            "name": "First user",
            "user_name": ""
         }
      },
      "last_active_profiles": [  ],
      "last_used": "Default"
   },
   "shutdown": {
      "num_processes": 1,
      "num_processes_slow": 0,
      "type": 1
   },
   "uninstall_metrics": {
      "installation_date2": "1413559971",
      "launch_count": "27"
   },
   "user_experience_metrics": {
      "low_entropy_source2": 7395,
      "machine_id": 969379,
      "session_id": 26,
      "stability": {
         "debugger_not_present": 27,
         "execution_phase": 700,
         "exited_cleanly": true,
         "last_timestamp_sec": "1454486985",
         "launch_count": 27,
         "launch_time_sec": "1454486969",
         "plugin_stats2": [  ],
         "session_end_completed": true,
         "stats_buildtime": "1412874027",
         "stats_version": "38.0.2125.104"
      }
   },
   "variations_last_fetch_time": "13098960570180614",
   "variations_seed": "",
   "variations_seed_date": "13098960571000000",
   "variations_seed_signature": "MEUCIQC5JUHlenjbhQAEDYYpCumYXN30dT7eLR1L29Uxegq4LQIgFaMkDWVG6eEomKm2Rsas8C4zGMJJOshcSXECwCyQjaA=",
   "was": {
      "restarted": false
   }
}
